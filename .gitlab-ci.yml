stages:
  - build
  - deploy

variables:
  TAG_IMAGE: $CI_COMMIT_BRANCH-$CI_COMMIT_SHA

build_prod:
  image: docker:latest
  stage: build
  services:
    - docker:dind
  before_script:
    - cp $ENV .env
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY
  script:
    - docker build -t "$CI_REGISTRY_IMAGE:latest" -t "$CI_REGISTRY_IMAGE:$TAG_IMAGE" .
    - docker push "$CI_REGISTRY_IMAGE"
  only:
    - main

deploy_prod:
  stage: deploy
  image: ubuntu
  tags:
    - production
  before_script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
  script:
    - docker pull "$CI_REGISTRY_IMAGE"
    - docker container rm -f lapakami_v2:prod || true
    - docker run -d --restart unless-stopped -p 8077:8000 --name lapakami_v2_prod $CI_REGISTRY_IMAGE
    - docker image prune -f
  only:
    - main

build_stag:
  stage: build
  before_script:
    - cp $ENV_STAG .env
  script:
    - docker build -t lapakami_v2:staging -f Dockerfile.stag.
  only:
    - staging

deploy_stag:
  stage: deploy
  script:
    - docker container rm -f lapakami_v2:staging || true
    - docker run -d -p 8076:8000 lapakami_v2_staging
    - docker image prune -f
  only:
    - staging
  tags:
    - staging

build_dev:
  image: docker:latest
  stage: build
  services:
    - docker:dind
  before_script:
    - cp $ENV_DEV .env
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY
  script:
    - docker build -t lapakami_v2:develop -f Dockerfile.dev.
    - docker build -t "$CI_REGISTRY_IMAGE:develop_latest" -t "$CI_REGISTRY_IMAGE:$TAG_IMAGE" .
    - docker push "$CI_REGISTRY_IMAGE"
  only:
    - develop

deploy_dev:
  stage: deploy
  image: ubuntu
  tags:
    - develop
  before_script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
  script:
    - docker pull "$CI_REGISTRY_IMAGE"
    - docker container rm -f lapakami_v2_develop || true
    - docker run -d --restart unless-stopped -p 8075:8000 --name lapakami_v2_develop $CI_REGISTRY_IMAGE
    - docker image prune -f
  only:
    - develop
  
